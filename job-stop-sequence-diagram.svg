<svg width="1200" height="800" xmlns="http://www.w3.org/2000/svg">
  <defs>
    <style>
      .title { font-family: Arial, sans-serif; font-size: 18px; font-weight: bold; text-anchor: middle; }
      .actor { font-family: Arial, sans-serif; font-size: 12px; text-anchor: middle; font-weight: bold; }
      .message { font-family: Arial, sans-serif; font-size: 11px; }
      .note { font-family: Arial, sans-serif; font-size: 10px; fill: #666; }
      .lifeline { stroke: #333; stroke-width: 2; stroke-dasharray: 5,5; }
      .activation { fill: #e6f3ff; stroke: #0066cc; stroke-width: 1; }
      .arrow { stroke: #333; stroke-width: 1.5; fill: none; marker-end: url(#arrowhead); }
      .return-arrow { stroke: #666; stroke-width: 1; fill: none; marker-end: url(#return-arrowhead); stroke-dasharray: 3,3; }
      .self-arrow { stroke: #333; stroke-width: 1.5; fill: none; marker-end: url(#arrowhead); }
    </style>
    <marker id="arrowhead" markerWidth="10" markerHeight="7" refX="9" refY="3.5" orient="auto">
      <polygon points="0 0, 10 3.5, 0 7" fill="#333" />
    </marker>
    <marker id="return-arrowhead" markerWidth="10" markerHeight="7" refX="9" refY="3.5" orient="auto">
      <polygon points="0 0, 10 3.5, 0 7" fill="#666" />
    </marker>
  </defs>
  
  <!-- Title -->
  <text x="600" y="30" class="title">Spring Batch Job停止流程时序图</text>
  
  <!-- Actors -->
  <rect x="50" y="50" width="100" height="40" fill="#f0f8ff" stroke="#333" rx="5"/>
  <text x="100" y="75" class="actor">Web Client</text>
  
  <rect x="200" y="50" width="120" height="40" fill="#f0f8ff" stroke="#333" rx="5"/>
  <text x="260" y="75" class="actor">JobController</text>
  
  <rect x="370" y="50" width="100" height="40" fill="#f0f8ff" stroke="#333" rx="5"/>
  <text x="420" y="75" class="actor">JobService</text>
  
  <rect x="520" y="50" width="120" height="40" fill="#f0f8ff" stroke="#333" rx="5"/>
  <text x="580" y="75" class="actor">JobStopManager</text>
  
  <rect x="690" y="50" width="100" height="40" fill="#f0f8ff" stroke="#333" rx="5"/>
  <text x="740" y="75" class="actor">JobOperator</text>
  
  <rect x="840" y="50" width="140" height="40" fill="#f0f8ff" stroke="#333" rx="5"/>
  <text x="910" y="75" class="actor">AsyncBusinessJobTasklet</text>
  
  <rect x="1030" y="50" width="120" height="40" fill="#f0f8ff" stroke="#333" rx="5"/>
  <text x="1090" y="75" class="actor">业务处理线程</text>
  
  <!-- Lifelines -->
  <line x1="100" y1="90" x2="100" y2="750" class="lifeline"/>
  <line x1="260" y1="90" x2="260" y2="750" class="lifeline"/>
  <line x1="420" y1="90" x2="420" y2="750" class="lifeline"/>
  <line x1="580" y1="90" x2="580" y2="750" class="lifeline"/>
  <line x1="740" y1="90" x2="740" y2="750" class="lifeline"/>
  <line x1="910" y1="90" x2="910" y2="750" class="lifeline"/>
  <line x1="1090" y1="90" x2="1090" y2="750" class="lifeline"/>
  
  <!-- Messages -->
  
  <!-- 1. Stop request -->
  <line x1="100" y1="120" x2="260" y2="120" class="arrow"/>
  <text x="180" y="115" class="message">POST /api/jobs/{id}/stop</text>
  
  <!-- Activation boxes -->
  <rect x="255" y="120" width="10" height="580" class="activation"/>
  
  <!-- 2. Call stopJob -->
  <line x1="260" y1="150" x2="420" y2="150" class="arrow"/>
  <text x="340" y="145" class="message">stopJob(executionId)</text>
  
  <rect x="415" y="150" width="10" height="520" class="activation"/>
  
  <!-- 3. Check job existence -->
  <path d="M 420 180 Q 450 180 450 200 Q 450 220 420 220" class="self-arrow"/>
  <text x="460" y="195" class="message">jobExplorer.getJobExecution()</text>
  <text x="460" y="210" class="note">检查Job是否存在</text>
  
  <!-- 4. Check if running -->
  <path d="M 420 250 Q 450 250 450 270 Q 450 290 420 290" class="self-arrow"/>
  <text x="460" y="265" class="message">jobExecution.getStatus().isRunning()</text>
  <text x="460" y="280" class="note">检查Job是否正在运行</text>
  
  <!-- 5. Set stop flag -->
  <line x1="420" y1="320" x2="580" y2="320" class="arrow"/>
  <text x="500" y="315" class="message">setStopFlag(executionId)</text>
  
  <rect x="575" y="320" width="10" height="200" class="activation"/>
  
  <!-- 6. Store stop flag -->
  <path d="M 580 350 Q 610 350 610 370 Q 610 390 580 390" class="self-arrow"/>
  <text x="620" y="365" class="message">stopFlags.put(executionId, true)</text>
  <text x="620" y="380" class="note">设置停止标志</text>
  
  <!-- 7. Get thread reference -->
  <path d="M 580 420 Q 610 420 610 440 Q 610 460 580 460" class="self-arrow"/>
  <text x="620" y="435" class="message">jobThreads.get(executionId)</text>
  <text x="620" y="450" class="note">获取线程引用</text>
  
  <!-- 8. Interrupt thread -->
  <line x1="580" y1="490" x2="1090" y2="490" class="arrow"/>
  <text x="835" y="485" class="message">thread.interrupt()</text>
  <text x="835" y="500" class="note">强制中断业务处理线程</text>
  
  <!-- 9. Call Spring Batch stop -->
  <line x1="420" y1="550" x2="740" y2="550" class="arrow"/>
  <text x="580" y="545" class="message">jobOperator.stop(executionId)</text>
  
  <rect x="735" y="550" width="10" height="50" class="activation"/>
  
  <!-- 10. Return stop result -->
  <line x1="740" y1="580" x2="420" y2="580" class="return-arrow"/>
  <text x="580" y="575" class="message">boolean result</text>
  
  <!-- 11. Business logic checks stop flag -->
  <line x1="910" y1="610" x2="580" y2="610" class="arrow"/>
  <text x="745" y="605" class="message">shouldStop(executionId)</text>
  
  <rect x="575" y="610" width="10" height="30" class="activation"/>
  
  <!-- 12. Return stop status -->
  <line x1="580" y1="630" x2="910" y2="630" class="return-arrow"/>
  <text x="745" y="625" class="message">true/false</text>
  
  <!-- 13. Return to JobService -->
  <line x1="420" y1="660" x2="260" y2="660" class="return-arrow"/>
  <text x="340" y="655" class="message">boolean stopped</text>
  
  <!-- 14. Return to client -->
  <line x1="260" y1="690" x2="100" y2="690" class="return-arrow"/>
  <text x="180" y="685" class="message">JSON Response</text>
  
  <!-- Notes -->
  <rect x="50" y="720" width="1100" height="25" fill="#fffacd" stroke="#ddd" rx="3"/>
  <text x="60" y="735" class="note">注意：业务处理线程会定期检查shouldStop()标志，如果为true则优雅退出处理循环</text>
  
</svg>